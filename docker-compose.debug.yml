services:
  mangahomeapi:
    image: mangahomeapi
    container_name: mangahomeapi
    build:
      context: .
      dockerfile: src/MangaHome.Api/Dockerfile
      args:
        - configuration=Debug
    ports:
      - "5000:5000"
      - "5001:5001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:5001;http://+:5000
      - ASPNETCORE_HTTP_PORT=5000
      - ASPNETCORE_HTTPS_PORT=5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=password
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ConnectionStrings__Default=${CONN_STR}
    networks:
      - backend
    volumes:
      - ~/.vsdbg:/remote_debugger:rw
      - ${CERT_PATH}:/https:ro
      - ./logs:/logs

  postgres:
    image: postgres:17.2
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    networks:
      - backend
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - backend
    volumes:
      - es_data:/var/lib/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.0
    container_name: logstash
    build:
      context: ./logstash/
      dockerfile: Dockerfile
    ports:
      - "9300:9300"
    environment:
      - CONFIG_SUPPORT_ESCAPE=true
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    depends_on:
      - elasticsearch
      - postgres
    networks:
      - backend
    volumes:
      - ls_data:/usr/share/logstash/data

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.17.0
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - backend
    depends_on:
      - elasticsearch

networks:
  backend:
    driver: bridge

volumes:
  pg_data:
    driver: local
  es_data:
    driver: local
  ls_data:
    driver: local